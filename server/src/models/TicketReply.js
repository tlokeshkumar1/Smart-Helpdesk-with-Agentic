import mongoose from 'mongoose';

const schema = new mongoose.Schema({
  ticketId: { type: mongoose.Schema.Types.ObjectId, ref: 'Ticket', required: true, index: true },
  content: { type: String, required: true },
  author: { type: mongoose.Schema.Types.ObjectId, ref: 'User', default: null }, // null for system/agent replies
  authorType: { type: String, enum: ['user', 'agent', 'system'], required: true },
  isInternal: { type: Boolean, default: false }, // Internal notes not visible to customer
  attachments: [{ type: String }], // Array of URLs
  citations: [{ type: String }], // KB article IDs referenced
  agentSuggestionId: { type: mongoose.Schema.Types.ObjectId, ref: 'AgentSuggestion' }, // If generated by agent
  traceId: { type: String }, // Trace ID for correlation with audit logs
  createdAt: { type: Date, default: () => new Date() },
  updatedAt: { type: Date, default: () => new Date() }
}, { timestamps: { createdAt: 'createdAt', updatedAt: 'updatedAt' } });

// Index for efficient querying
schema.index({ ticketId: 1, createdAt: 1 });
schema.index({ authorType: 1, createdAt: -1 });

export const TicketReply = mongoose.model('TicketReply', schema);
